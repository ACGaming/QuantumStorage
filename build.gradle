
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/

repositories {
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
}

version = "1.9-3.0.0"
group= "com.gigabit101.quantumstorage" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "QuantumStorage"

minecraft {
    version = "1.9-12.16.0.1766-1.9"
    runDir = "run"
    mappings = "snapshot_20160312"
}

def grabDep(name, url){
    ant.get(src: url, dest: 'dep')
    file("dep/" + url.substring(url.lastIndexOf("/"))).renameTo(file("dep/" + name + ".jar"))
}

dependencies {
    def f = new File('dep/')
    if(f.exists()){
        f.delete()
    }
    f.mkdirs()
    if(!f.exists()){
        f.mkdir()
    }
    println("  Downloading dependencies!")
    grabDep('Waila', 'http://addons-origin.cursecdn.com/files/2270/822/Waila-1.6.0-B3_1.8.8-dev.jar')    
    compile 'RebornCore:RebornCore-1.9:2.0.0.+:dev'

    println("  Adding dependencies!")
     compile files("dep/Waila.jar")
    println("  Finished adding dependencies!")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
